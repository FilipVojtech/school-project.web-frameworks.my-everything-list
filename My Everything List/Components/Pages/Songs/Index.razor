@page "/songs"
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin,User")]
@implements IDisposable
@implements IAsyncDisposable

@inject NavigationManager Navigation
@inject MyEverythingListContext Context
@inject IUserService User

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using My_Everything_List.Data
@using My_Everything_List.Models
@using My_Everything_List.Services.UserService

<PageTitle>Your Music</PageTitle>

<div class="container-fluid d-flex justify-content-between mb-3">
    <h3>Music</h3>
    <SearchMusicModal ButtonTitle="Add Music" OnItemSelected="(_, song) => AddMusicItem(song)"/>
</div>

@{
    var artists = _currentUser.UsersMusic.FindAll(item => item.MusicItem.ItemType == MusicItemType.Artist);
    var albums = _currentUser.UsersMusic.FindAll(item => item.MusicItem.ItemType == MusicItemType.Album);
    var tracks = _currentUser.UsersMusic.FindAll(item => item.MusicItem.ItemType == MusicItemType.Track);
}

@if (tracks.Count > 0)
{
    <div class="m-1">
        <h3>Songs</h3>
        @foreach (var userTrack in tracks)
        {
            var track = (Song)userTrack.MusicItem;
            <SongItem
                Id="@track.Id.ToString()"
                Title="@track.Name"
                Artist="@track.Artist"
                Image="@track.Image"
                OnClick='() => Navigation.NavigateTo($"/songs/song/{track.Id}")'
            />
        }
    </div>
}

@if (artists.Count > 0)
{
    <div class="m-1">
        <h3>Artists</h3>
        @foreach (var userArtist in artists)
        {
            var artist = (Artist)userArtist.MusicItem;
            <ArtistItem
                Id="@artist.Id.ToString()"
                Title="@artist.Name"
                Image="@artist.Image"
                OnClick='()=>Navigation.NavigateTo($"/songs/artist/{artist.Id}")'
            />
        }
    </div>
}

@if (albums.Count > 0)
{
    <div class="m-1">
        <h3>Albums</h3>
        @foreach (var userAlbum in albums)
        {
            var album = (Album)userAlbum.MusicItem;
            <AlbumItem
                Id="@album.Id.ToString()"
                Title="@album.Name"
                Image="@album.Image"
                Artist="@album.Artist"
                OnClick='() => Navigation.NavigateTo($"/songs/album/{album.Id}")'
            />
        }
    </div>
}

@code {
    private User _currentUser;

    protected override async Task OnInitializedAsync()
    {
        var user = await User.GetUser();

        if (user is null) Navigation.NavigateTo("/");
        else
            _currentUser = Context.User
                .Include(u => u.UsersMusic)
                .Include(u => u.SavedMusic)
                .First(u => u == user);

        await base.OnInitializedAsync();
    }

    private void AddMusicItem(MusicItem item)
    {
        // TODO: Move logic to MusicService
        var musicInDb = Context.MusicItems.FirstOrDefault(m => m == item)
                        ?? Context.MusicItems.Add(item).Entity;

        if (_currentUser.SavedMusic.Contains(musicInDb)) return;

        _currentUser.SavedMusic.Add(musicInDb);
        Context.SaveChanges();
        StateHasChanged();
    }

    public void Dispose()
    {
        Context?.Dispose();
    }

    public async ValueTask DisposeAsync()
    {
        if (Context != null) await Context.DisposeAsync();
    }

}
